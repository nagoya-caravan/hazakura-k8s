---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      initContainers:
        - name: clone
          image: alpine/git
          command:
            - git
          args:
            - clone
            - --filter=blob:none
            - https://:$(TOKEN)@github.com/nagoya-caravan/frontend
            - /srv/frontend
          env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  key: token
                  name: github-token
          volumeMounts:
            - mountPath: /srv
              name: srv
        - name: checkout
          image: alpine/git
          command:
            - git
          args:
            - checkout
            - $(REV)
          env:
            - name: REV
              value: e731a8ae2e71dab5e41fcfae5e4b59d4f3f6c103
          workingDir: /srv/frontend
          volumeMounts:
            - mountPath: /srv
              name: srv
        - name: depth
          image: alpine/git
          command:
            - git
          args:
            - fetch
            - --depth
            - "1"
          workingDir: /srv/frontend
          volumeMounts:
            - mountPath: /srv
              name: srv
      containers:
        - name: frontend
          ports:
            - containerPort: 8080
          image: node
          command:
            - bash
            - -c
          args:
            - |
              npm install &&
              npm run build &&
              npm run start
          workingDir: /srv/frontend
          volumeMounts:
            - mountPath: /srv
              name: srv
      volumes:
        - name: srv
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      name: "http"
  type: ClusterIP
  template:
    spec:
      initContainers:
        - null
        - env:
            - value: e731a8ae2e71dab5e41fcfae5e4b59d4f3f6c103
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
spec:
  ingressClassName: haproxy
  rules:
    - host: hazakura.kigawa.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 3000
  template:
    spec:
      initContainers:
        - null
        - env:
            - value: e731a8ae2e71dab5e41fcfae5e4b59d4f3f6c103
